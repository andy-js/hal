
CVSID:$Id$
 
This document is the TODO list for the HAL project. Feel free to
add/remove entries if you get an idea or implement one of these. If
you want to work on one of these you might want to send a patch that
updates this file to reflect it.

============================================================================
* CD Burning problems (davidz is working on this)
============================================================================

hald should use O_EXCL when polling the CD drive. Bastien Nocera
(magicdev maintainer) confirms that magicdev uses this and this fixes
the burning problems.

============================================================================
* Multi-function USB devices (davidz is working on this)
============================================================================

Here's one

     http://www.pc-netto.dk/templates/product.asp?productguid=133%2D09

this one got one USB interface for the PS/2 keyboard and one USB
interface for the PS/2 mouse. Here's another one

     http://www.superwarehouse.com/HP_PSC_2175/Q3068A/p/286911

that got a many USB interfaces for printing, scanning, media reader
etc. We need a better way of representing such devices; if possible
in a way that doesn't change already written .fdi files

============================================================================
* Input devices
============================================================================

We should somehow expose the protocol used; e.g. for input.device we
should have input.protocol=Linux|PS2 etc.

============================================================================
* More property types
============================================================================

The gstreamer guys expressed desire for some more property types; here's
some ideas

 - lists; should by of ANY type; info.capabilities should probably be
   a list of strings

 - ranges, e.g. [3.4;43.2[, [2.0;3.0]

============================================================================
* Root HalDevice representing system
============================================================================

The CITY OF LOST DEVICES HalDevice should be renamed to Computer and
contain information about the system such as the kernel version, X.org
version etc.



============================================================================
============================================================================
 NEW MAJOR RELEASE, UPDATE SPEC
============================================================================
============================================================================


============================================================================
* Locking of devices
============================================================================

It should be possible to acquire (advisory) locks on devices, for
discussion see this thread

     http://freedesktop.org/pipermail/hal/2004-July/000579.html

============================================================================
* Removal of class devices
============================================================================

Add support for removal of class devices - we should probably remove
the properties merged and send out a d-bus signal; see comments in
hald/linux/osspec.c:remove_class_device(). This can now easily be
tested with modprobe and rmmod on the sg kernel module


============================================================================
* .fdi file enhancements
============================================================================

There needs to be a way to match on capabilities in the FDI files.
It'd also be nice if there were author/maintainer info in there.

One way to implement this is using an existing PKI framework.  There
should be an easy way to sign an .fdi file e.g. a hal-sign-fdi
tool. There should also be a directory where vendors can easily drop
the public key.

Also, we should probably consider emitting a dbus-signal or setting a
property so desktop environments can figure display an appropriate
dialog with the .fdi file is unsigned. Probably needs discussion on
the mailing list.

============================================================================
* Persistent device store
============================================================================

Kay Sievers have implemented parts of it, see

     http://freedesktop.org/pipermail/hal/2004-June/000388.html

for details and discussion. This mail also covers things like clean
shutdown


============================================================================
* Power management
============================================================================

There is already some discussion here 

 http://freedesktop.org/pipermail/hal/2004-July/000544.html

about abstracting both ACPI and pmud.

============================================================================
* Support for more bus-devices and class-devices
============================================================================

Some low hanging fruit might be video4linux stuff

============================================================================
* Testing
============================================================================

Testing framework; probably only feasible for non-os specific code,
e.g. the whole callout, device and device store framework

============================================================================
* Caching in libhal
============================================================================

Caching in libhal; the API is ready for it. Remember you cannot use
glib or other dependencies; we can only depend on libc and dbus!


============================================================================
* Property access control and per-user properties
============================================================================

Non-root users should only have read-access to the devices except in
properties where the key starts with 'user.'. Also properties starting
with 'user.' should be per-user (and per-box, e.g. don't save them in
a dotfile or dotdirectory in the users homedir; see TODO item for
persistent device store)

============================================================================
* Callouts
============================================================================

Callouts are currently called in order, so if a callout hangs then no
others will be called.  There should be a timeout which kills the
callout after a certain period of time.  (5 seconds?  10?  15?)

============================================================================
* Device Removal
============================================================================

We shouldn't remove a device before all the children are removed


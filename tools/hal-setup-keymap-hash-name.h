/* C code produced by gperf version 3.0.3 */
/* Command-line: gperf -t --ignore-case -N lookup_key -H hash_input_names -p -C  */
/* Computed positions: -k'1-3,5,$' */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif

struct key { const char* name; unsigned short id; };

#define TOTAL_KEYWORDS 364
#define MIN_WORD_LENGTH 1
#define MAX_WORD_LENGTH 16
#define MIN_HASH_VALUE 1
#define MAX_HASH_VALUE 1355
/* maximum key range = 1355, duplicates = 0 */

#ifndef GPERF_DOWNCASE
#define GPERF_DOWNCASE 1
static unsigned char gperf_downcase[256] =
  {
      0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,
     15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,
     30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,
     45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,
     60,  61,  62,  63,  64,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106,
    107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
    122,  91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
    135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
    165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
    195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
    225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
    255
  };
#endif

#ifndef GPERF_CASE_STRCMP
#define GPERF_CASE_STRCMP 1
static int
gperf_case_strcmp (s1, s2)
     register const char *s1;
     register const char *s2;
{
  for (;;)
    {
      unsigned char c1 = gperf_downcase[(unsigned char)*s1++];
      unsigned char c2 = gperf_downcase[(unsigned char)*s2++];
      if (c1 != 0 && c1 == c2)
        continue;
      return (int)c1 - (int)c2;
    }
}
#endif

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
hash_input_names (str, len)
     register const char *str;
     register unsigned int len;
{
  static const unsigned short asso_values[] =
    {
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,  180,  195,
        65,  245,  275,  150,  220,  315,  295,  320,    0, 1356,
      1356, 1356, 1356, 1356, 1356,  105,  270,   35,   15,   10,
       225,  190,   25,  110,  285,  115,  215,   30,   85,    5,
       135,  460,    0,   20,   40,   75,  450,  250,  355,   45,
       380, 1356, 1356, 1356, 1356, 1356,  205,  105,  270,   35,
        15,   10,  225,  190,   25,  110,  285,  115,  215,   30,
        85,    5,  135,  460,    0,   20,   40,   75,  450,  250,
       355,   45,  380, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
      1356, 1356, 1356, 1356, 1356, 1356, 1356
    };
  register int hval = len;

  switch (hval)
    {
      default:
        hval += asso_values[(unsigned char)str[4]];
      /*FALLTHROUGH*/
      case 4:
      case 3:
        hval += asso_values[(unsigned char)str[2]+1];
      /*FALLTHROUGH*/
      case 2:
        hval += asso_values[(unsigned char)str[1]];
      /*FALLTHROUGH*/
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval + asso_values[(unsigned char)str[len - 1]];
}

#ifdef __GNUC__
__inline
#ifdef __GNUC_STDC_INLINE__
__attribute__ ((__gnu_inline__))
#endif
#endif
const struct key *
lookup_key (str, len)
     register const char *str;
     register unsigned int len;
{
  static const struct key wordlist[] =
    {
      {(char*)0},
      {"R", KEY_R},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"O", KEY_O},
      {"RO", KEY_RO},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"E", KEY_E},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"REDO", KEY_REDO},
      {(char*)0},
      {"D", KEY_D},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"RED", KEY_RED},
      {(char*)0}, {(char*)0},
      {"S", KEY_S},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"RECORD", KEY_RECORD},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"H", KEY_H},
      {(char*)0}, {(char*)0},
      {"SEND", KEY_SEND},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"MODE", KEY_MODE},
      {(char*)0},
      {"M", KEY_M},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"CD", KEY_CD},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"C", KEY_C},
      {(char*)0},
      {"RESERVED", KEY_RESERVED},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"T", KEY_T},
      {(char*)0},
      {"ESC", KEY_ESC},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"Y", KEY_Y},
      {"DEL_EOS", KEY_DEL_EOS},
      {(char*)0},
      {"DOCUMENTS", KEY_DOCUMENTS},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"MESSENGER", KEY_MESSENGER},
      {(char*)0}, {(char*)0},
      {"CONNECT", KEY_CONNECT},
      {(char*)0}, {(char*)0},
      {"MSDOS", KEY_MSDOS},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"DELETE", KEY_DELETE},
      {(char*)0}, {(char*)0},
      {"EURO", KEY_EURO},
      {"DELETEFILE", KEY_DELETEFILE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"END", KEY_END},
      {"MENU", KEY_MENU},
      {"TUNER", KEY_TUNER},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"HOME", KEY_HOME},
      {"RADIO", KEY_RADIO},
      {"2", KEY_2},
      {(char*)0}, {(char*)0},
      {"MEMO", KEY_MEMO},
      {(char*)0}, {(char*)0},
      {"CYCLEWINDOWS", KEY_CYCLEWINDOWS},
      {"DOT", KEY_DOT},
      {"TEXT", KEY_TEXT},
      {(char*)0},
      {"SELECT", KEY_SELECT},
      {"CONTEXT_MENU", KEY_CONTEXT_MENU},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"COMPOSE", KEY_COMPOSE},
      {"YEN", KEY_YEN},
      {(char*)0}, {(char*)0},
      {"U", KEY_U},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"DOLLAR", KEY_DOLLAR},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"MACRO", KEY_MACRO},
      {(char*)0},
      {"SUSPEND", KEY_SUSPEND},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"N", KEY_N},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"ENTER", KEY_ENTER},
      {"SCREEN", KEY_SCREEN},
      {(char*)0}, {(char*)0},
      {"UNDO", KEY_UNDO},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"NEXT", KEY_NEXT},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"MINUS", KEY_MINUS},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"MUTE", KEY_MUTE},
      {"RIGHTBRACE", KEY_RIGHTBRACE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"RESTART", KEY_RESTART},
      {(char*)0},
      {"HELP", KEY_HELP},
      {"AUDIO", KEY_AUDIO},
      {(char*)0},
      {"PC", KEY_PC},
      {"COMPUTER", KEY_COMPUTER},
      {"CALC", KEY_CALC},
      {"SCREENLOCK", KEY_SCREENLOCK},
      {"A", KEY_A},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"DIGITS", KEY_DIGITS},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"RIGHT", KEY_RIGHT},
      {"I", KEY_I},
      {(char*)0},
      {"RIGHTALT", KEY_RIGHTALT},
      {(char*)0},
      {"RIGHTSHIFT", KEY_RIGHTSHIFT},
      {(char*)0}, {(char*)0},
      {"CUT", KEY_CUT},
      {(char*)0}, {(char*)0},
      {"K", KEY_K},
      {(char*)0}, {(char*)0},
      {"DIRECTORY", KEY_DIRECTORY},
      {(char*)0},
      {"HENKAN", KEY_HENKAN},
      {"OK", KEY_OK},
      {"CNT", KEY_CNT},
      {(char*)0},
      {"ANGLE", KEY_ANGLE},
      {(char*)0},
      {"REFRESH", KEY_REFRESH},
      {"SAT", KEY_SAT},
      {"SEMICOLON", KEY_SEMICOLON},
      {(char*)0}, {(char*)0},
      {"ARCHIVE", KEY_ARCHIVE},
      {(char*)0},
      {"TIME", KEY_TIME},
      {"TITLE", KEY_TITLE},
      {"STOPCD", KEY_STOPCD},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"COFFEE", KEY_COFFEE},
      {(char*)0},
      {"SUBTITLE", KEY_SUBTITLE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"CALENDAR", KEY_CALENDAR},
      {(char*)0},
      {"MEDIA", KEY_MEDIA},
      {"ADDRESSBOOK", KEY_ADDRESSBOOK},
      {(char*)0},
      {"HOMEPAGE", KEY_HOMEPAGE},
      {"SAT2", KEY_SAT2},
      {(char*)0},
      {"P", KEY_P},
      {(char*)0},
      {"ISO", KEY_ISO},
      {"DIRECTION", KEY_DIRECTION},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"SENDFILE", KEY_SENDFILE},
      {"GOTO", KEY_GOTO},
      {(char*)0},
      {"INSERT", KEY_INSERT},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"DEL_EOL", KEY_DEL_EOL},
      {"DEL_LINE", KEY_DEL_LINE},
      {"RIGHTMETA", KEY_RIGHTMETA},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"HP", KEY_HP},
      {(char*)0},
      {"MOVE", KEY_MOVE},
      {(char*)0},
      {"5", KEY_5},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"PASTE", KEY_PASTE},
      {(char*)0},
      {"PROGRAM", KEY_PROGRAM},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"OPTION", KEY_OPTION},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"PROPS", KEY_PROPS},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"SHOP", KEY_SHOP},
      {"PHONE", KEY_PHONE},
      {"EDITOR", KEY_EDITOR},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"SPREADSHEET", KEY_SPREADSHEET},
      {(char*)0}, {(char*)0},
      {"STOP", KEY_STOP},
      {(char*)0},
      {"CAMERA", KEY_CAMERA},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"COMMA", KEY_COMMA},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"KPDOT", KEY_KPDOT},
      {"YELLOW", KEY_YELLOW},
      {"UP", KEY_UP},
      {(char*)0}, {(char*)0},
      {"HANJA", KEY_HANJA},
      {"CONFIG", KEY_CONFIG},
      {(char*)0}, {(char*)0},
      {"EDIT", KEY_EDIT},
      {(char*)0}, {(char*)0},
      {"F2", KEY_F2},
      {"NEXTSONG", KEY_NEXTSONG},
      {"FIND", KEY_FIND},
      {(char*)0},
      {"0", KEY_0},
      {(char*)0},
      {"EPG", KEY_EPG},
      {"TEEN", KEY_TEEN},
      {(char*)0},
      {"SEARCH", KEY_SEARCH},
      {"HANGEUL", KEY_HANGEUL},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"NUMLOCK", KEY_NUMLOCK},
      {"PAGEDOWN", KEY_PAGEDOWN},
      {"CHAT", KEY_CHAT},
      {"SPORT", KEY_SPORT},
      {"CANCEL", KEY_CANCEL},
      {"FORWARD", KEY_FORWARD},
      {(char*)0},
      {"FILE", KEY_FILE},
      {"SETUP", KEY_SETUP},
      {"G", KEY_G},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"SCROLLDOWN", KEY_SCROLLDOWN},
      {(char*)0}, {(char*)0},
      {"BRL_DOT2", KEY_BRL_DOT2},
      {"SAVE", KEY_SAVE},
      {(char*)0},
      {"1", KEY_1},
      {(char*)0},
      {"MUHENKAN", KEY_MUHENKAN},
      {"INFO", KEY_INFO},
      {(char*)0}, {(char*)0},
      {"FN", KEY_FN},
      {(char*)0},
      {"RIGHTCTRL", KEY_RIGHTCTRL},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"DISPLAYTOGGLE", KEY_DISPLAYTOGGLE},
      {"LAST", KEY_LAST},
      {"PROG2", KEY_PROG2},
      {(char*)0},
      {"KPCOMMA", KEY_KPCOMMA},
      {(char*)0},
      {"LIST", KEY_LIST},
      {"CLOSE", KEY_CLOSE},
      {(char*)0}, {(char*)0},
      {"ALTERASE", KEY_ALTERASE},
      {(char*)0},
      {"SCROLLLOCK", KEY_SCROLLLOCK},
      {(char*)0},
      {"CLOSECD", KEY_CLOSECD},
      {"LANGUAGE", KEY_LANGUAGE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"WORDPROCESSOR", KEY_WORDPROCESSOR},
      {(char*)0},
      {"GAMES", KEY_GAMES},
      {(char*)0},
      {"KPSLASH", KEY_KPSLASH},
      {(char*)0},
      {"BACKSPACE", KEY_BACKSPACE},
      {(char*)0},
      {"L", KEY_L},
      {"HANGUEL", KEY_HANGUEL},
      {"SCROLLUP", KEY_SCROLLUP},
      {(char*)0},
      {"APOSTROPHE", KEY_APOSTROPHE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"FIRST", KEY_FIRST},
      {"6", KEY_6},
      {"FINANCE", KEY_FINANCE},
      {(char*)0},
      {"BACKSLASH", KEY_BACKSLASH},
      {"FRONT", KEY_FRONT},
      {(char*)0},
      {"KPMINUS", KEY_KPMINUS},
      {(char*)0}, {(char*)0},
      {"SPACE", KEY_SPACE},
      {"F", KEY_F},
      {(char*)0},
      {"TAB", KEY_TAB},
      {"OPEN", KEY_OPEN},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"HIRAGANA", KEY_HIRAGANA},
      {"LEFT", KEY_LEFT},
      {"MIN_INTERESTING", KEY_MIN_INTERESTING},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"DOWN", KEY_DOWN},
      {(char*)0}, {(char*)0},
      {"PRESENTATION", KEY_PRESENTATION},
      {"INS_LINE", KEY_INS_LINE},
      {"BOOKMARKS", KEY_BOOKMARKS},
      {(char*)0},
      {"REWIND", KEY_REWIND},
      {"UNKNOWN", KEY_UNKNOWN},
      {"BRL_DOT5", KEY_BRL_DOT5},
      {"NEWS", KEY_NEWS},
      {(char*)0},
      {"VENDOR", KEY_VENDOR},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"CLEAR", KEY_CLEAR},
      {"PAGEUP", KEY_PAGEUP},
      {(char*)0},
      {"DATABASE", KEY_DATABASE},
      {"LEFTSHIFT", KEY_LEFTSHIFT},
      {"GRAVE", KEY_GRAVE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"3", KEY_3},
      {(char*)0},
      {"DVD", KEY_DVD},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"PREVIOUS", KEY_PREVIOUS},
      {"GRAPHICSEDITOR", KEY_GRAPHICSEDITOR},
      {"POWER", KEY_POWER},
      {"W", KEY_W},
      {(char*)0}, {(char*)0},
      {"BRL_DOT10", KEY_BRL_DOT10},
      {"PRINT", KEY_PRINT},
      {(char*)0}, {(char*)0},
      {"VCR", KEY_VCR},
      {"BACK", KEY_BACK},
      {"SOUND", KEY_SOUND},
      {"CHANNELDOWN", KEY_CHANNELDOWN},
      {"BATTERY", KEY_BATTERY},
      {"KP1", KEY_KP1},
      {"KPJPCOMMA", KEY_KPJPCOMMA},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"BRL_DOT1", KEY_BRL_DOT1},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"KPENTER", KEY_KPENTER},
      {"KATAKANA", KEY_KATAKANA},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"F5", KEY_F5},
      {(char*)0},
      {"FN_E", KEY_FN_E},
      {(char*)0},
      {"KATAKANAHIRAGANA", KEY_KATAKANAHIRAGANA},
      {"FRAMEFORWARD", KEY_FRAMEFORWARD},
      {"KEYBOARD", KEY_KEYBOARD},
      {"FN_D", KEY_FN_D},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"FN_S", KEY_FN_S},
      {(char*)0},
      {"B", KEY_B},
      {(char*)0},
      {"BRL_DOT6", KEY_BRL_DOT6},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"COPY", KEY_COPY},
      {(char*)0},
      {"4", KEY_4},
      {(char*)0},
      {"F21", KEY_F21},
      {"ZOOM", KEY_ZOOM},
      {(char*)0}, {(char*)0},
      {"KPRIGHTPAREN", KEY_KPRIGHTPAREN},
      {"LEFTMETA", KEY_LEFTMETA},
      {"CHANNELUP", KEY_CHANNELUP},
      {"SLASH", KEY_SLASH},
      {(char*)0}, {(char*)0},
      {"KP2", KEY_KP2},
      {(char*)0},
      {"REPLY", KEY_REPLY},
      {"POWER2", KEY_POWER2},
      {"LEFTALT", KEY_LEFTALT},
      {"BRL_DOT3", KEY_BRL_DOT3},
      {"ZOOMRESET", KEY_ZOOMRESET},
      {(char*)0},
      {"J", KEY_J},
      {"ZOOMOUT", KEY_ZOOMOUT},
      {"KP9", KEY_KP9},
      {"VCR2", KEY_VCR2},
      {(char*)0},
      {"FN_ESC", KEY_FN_ESC},
      {(char*)0},
      {"LINEFEED", KEY_LINEFEED},
      {(char*)0}, {(char*)0},
      {"FORWARDMAIL", KEY_FORWARDMAIL},
      {"EJECTCD", KEY_EJECTCD},
      {"AUX", KEY_AUX},
      {"FN_2", KEY_FN_2},
      {"VIDEO", KEY_VIDEO},
      {(char*)0},
      {"EJECTCLOSECD", KEY_EJECTCLOSECD},
      {(char*)0},
      {"ZENKAKUHANKAKU", KEY_ZENKAKUHANKAKU},
      {"GREEN", KEY_GREEN},
      {"8", KEY_8},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"VIDEOPHONE", KEY_VIDEOPHONE},
      {(char*)0}, {(char*)0},
      {"BRL_DOT4", KEY_BRL_DOT4},
      {(char*)0},
      {"BRIGHTNESS_ZERO", KEY_BRIGHTNESS_ZERO},
      {"KPLEFTPAREN", KEY_KPLEFTPAREN},
      {(char*)0},
      {"F22", KEY_F22},
      {"TWEN", KEY_TWEN},
      {(char*)0},
      {"BRIGHTNESS_CYCLE", KEY_BRIGHTNESS_CYCLE},
      {(char*)0},
      {"PVR", KEY_PVR},
      {"FAVORITES", KEY_FAVORITES},
      {"VOLUMEDOWN", KEY_VOLUMEDOWN},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"SWITCHVIDEOMODE", KEY_SWITCHVIDEOMODE},
      {"DISPLAY_OFF", KEY_DISPLAY_OFF},
      {"F1", KEY_F1},
      {"BRL_DOT8", KEY_BRL_DOT8},
      {"TAPE", KEY_TAPE},
      {(char*)0},
      {"FASTFORWARD", KEY_FASTFORWARD},
      {(char*)0},
      {"KP5", KEY_KP5},
      {"SLOW", KEY_SLOW},
      {"VIDEO_NEXT", KEY_VIDEO_NEXT},
      {(char*)0}, {(char*)0},
      {"KP0", KEY_KP0},
      {"FRAMEBACK", KEY_FRAMEBACK},
      {(char*)0},
      {"7", KEY_7},
      {(char*)0},
      {"UWB", KEY_UWB},
      {"KBDILLUMTOGGLE", KEY_KBDILLUMTOGGLE},
      {(char*)0},
      {"PLAYER", KEY_PLAYER},
      {"CHANNEL", KEY_CHANNEL},
      {"BRL_DOT7", KEY_BRL_DOT7},
      {"MAIL", KEY_MAIL},
      {(char*)0},
      {"9", KEY_9},
      {(char*)0},
      {"BRL_DOT9", KEY_BRL_DOT9},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"AB", KEY_AB},
      {(char*)0}, {(char*)0},
      {"FN_F2", KEY_FN_F2},
      {(char*)0}, {(char*)0},
      {"MHP", KEY_MHP},
      {(char*)0},
      {"102ND", KEY_102ND},
      {(char*)0}, {(char*)0},
      {"VOLUMEUP", KEY_VOLUMEUP},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"PROG1", KEY_PROG1},
      {(char*)0},
      {"F6", KEY_F6},
      {"F20", KEY_F20},
      {"PLAY", KEY_PLAY},
      {(char*)0}, {(char*)0},
      {"PREVIOUSSONG", KEY_PREVIOUSSONG},
      {"LEFTCTRL", KEY_LEFTCTRL},
      {(char*)0}, {(char*)0},
      {"PLAYCD", KEY_PLAYCD},
      {(char*)0},
      {"KP4", KEY_KP4},
      {"BRIGHTNESSDOWN", KEY_BRIGHTNESSDOWN},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"F11", KEY_F11},
      {(char*)0},
      {"KPASTERISK", KEY_KPASTERISK},
      {(char*)0}, {(char*)0},
      {"MP3", KEY_MP3},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"EXIT", KEY_EXIT},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"LOGOFF", KEY_LOGOFF},
      {(char*)0},
      {"NEW", KEY_NEW},
      {"LEFTBRACE", KEY_LEFTBRACE},
      {(char*)0}, {(char*)0},
      {"KBDILLUMDOWN", KEY_KBDILLUMDOWN},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"X", KEY_X},
      {(char*)0}, {(char*)0},
      {"FN_1", KEY_FN_1},
      {"PAUSE", KEY_PAUSE},
      {(char*)0},
      {"F3", KEY_F3},
      {"F24", KEY_F24},
      {(char*)0},
      {"SPELLCHECK", KEY_SPELLCHECK},
      {"ZOOMIN", KEY_ZOOMIN},
      {"PAUSECD", KEY_PAUSECD},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"BRIGHTNESSUP", KEY_BRIGHTNESSUP},
      {(char*)0}, {(char*)0},
      {"BREAK", KEY_BREAK},
      {(char*)0}, {(char*)0},
      {"F12", KEY_F12},
      {"BASSBOOST", KEY_BASSBOOST},
      {"SLEEP", KEY_SLEEP},
      {(char*)0},
      {"SHUFFLE", KEY_SHUFFLE},
      {(char*)0}, {(char*)0},
      {"AGAIN", KEY_AGAIN},
      {(char*)0}, {(char*)0},
      {"F19", KEY_F19},
      {"FN_F", KEY_FN_F},
      {"EMAIL", KEY_EMAIL},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"KBDILLUMUP", KEY_KBDILLUMUP},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"Z", KEY_Z},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"PROG3", KEY_PROG3},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"KPEQUAL", KEY_KPEQUAL},
      {"KP3", KEY_KP3},
      {"PLAYPAUSE", KEY_PLAYPAUSE},
      {(char*)0}, {(char*)0},
      {"F4", KEY_F4},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"FN_F12", KEY_FN_F12},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"WAKEUP", KEY_WAKEUP},
      {(char*)0},
      {"KP6", KEY_KP6},
      {"FN_B", KEY_FN_B},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"F15", KEY_F15},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"F10", KEY_F10},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"TV2", KEY_TV2},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"XFER", KEY_XFER},
      {(char*)0},
      {"KPPLUS", KEY_KPPLUS},
      {(char*)0},
      {"F23", KEY_F23},
      {(char*)0}, {(char*)0},
      {"KPPLUSMINUS", KEY_KPPLUSMINUS},
      {"F8", KEY_F8},
      {(char*)0}, {(char*)0},
      {"FN_F5", KEY_FN_F5},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"WLAN", KEY_WLAN},
      {"PROG4", KEY_PROG4},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"F14", KEY_F14},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"F7", KEY_F7},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"KP7", KEY_KP7},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"F9", KEY_F9},
      {"KP8", KEY_KP8},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"QUESTION", KEY_QUESTION},
      {(char*)0}, {(char*)0},
      {"FN_F10", KEY_FN_F10},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"V", KEY_V},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"FN_F1", KEY_FN_F1},
      {"FN_F11", KEY_FN_F11},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"Q", KEY_Q},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"CAPSLOCK", KEY_CAPSLOCK},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"TV", KEY_TV},
      {"F13", KEY_F13},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"BLUE", KEY_BLUE},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"F16", KEY_F16},
      {(char*)0},
      {"FN_F6", KEY_FN_F6},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"VOICEMAIL", KEY_VOICEMAIL},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"BLUETOOTH", KEY_BLUETOOTH},
      {"FN_F3", KEY_FN_F3},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"SYSRQ", KEY_SYSRQ},
      {(char*)0}, {(char*)0},
      {"F17", KEY_F17},
      {(char*)0},
      {"VIDEO_PREV", KEY_VIDEO_PREV},
      {(char*)0}, {(char*)0},
      {"F18", KEY_F18},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"FN_F4", KEY_FN_F4},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"WWW", KEY_WWW},
      {(char*)0},
      {"FN_F8", KEY_FN_F8},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"FN_F7", KEY_FN_F7},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"FN_F9", KEY_FN_F9},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"EQUAL", KEY_EQUAL}
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = hash_input_names (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register const char *s = wordlist[key].name;

          if (s && (((unsigned char)*str ^ (unsigned char)*s) & ~32) == 0 && !gperf_case_strcmp (str, s))
            return &wordlist[key];
        }
    }
  return 0;
}
